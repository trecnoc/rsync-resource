#!/usr/bin/env bash

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

SRC_DIR=$1
payload=$(mktemp "$TMPDIR/rsync-resource-request.XXXXXX")
cat > "$payload" <&0

SERVER=$(jq -r '.source.server // ""' < $payload)
USERNAME=$(jq -r '.source.username // ""' < $payload)
BASE_DIR=$(jq -r '.source.base_dir // ""' < $payload)
SUB_DIR=$(jq -r '.params.sub_dir // ""' < $payload)
INCLUDE=$(jq -r '.params.include // ""' < $payload)

# Setup SSH Key and config
mkdir -p ~/.ssh
(jq -r '.source.private_key // empty' < $payload) > ~/.ssh/server_key
echo -e "Host ${SERVER}\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
chmod -R 600 ~/.ssh

# Create base_dir
printf "Creating remote destination directory '%s'\n" ${BASE_DIR}
ssh -i ~/.ssh/server_key ${USERNAME}@${SERVER} mkdir -p ${BASE_DIR} 2> /dev/null

TRANSFER_SRC=${SRC_DIR}/
if [[ -n "${SUB_DIR}" ]]; then
  printf "Transfer content from sub-directory '%s' only\n" ${SUB_DIR}
  TRANSFER_SRC=${SRC_DIR}/${SUB_DIR}/
fi

if [[ -n "${INCLUDE}" ]]; then
  printf "Adding include pattern: %s\n\nExecuting transfer\n" ${INCLUDE}
  rsync -av --size-only --include "${INCLUDE}" --exclude "*" -e 'ssh -i ~/.ssh/server_key' ${TRANSFER_SRC} ${USERNAME}@${SERVER}:${BASE_DIR}/
else
  printf "\nExecuting transfer\n"
  rsync -av --size-only -e 'ssh -i ~/.ssh/server_key' ${TRANSFER_SRC} ${USERNAME}@${SERVER}:${BASE_DIR}/
fi

echo '{"version":{}}' >&3
